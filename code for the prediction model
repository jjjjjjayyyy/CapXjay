# scripts/train_model.py
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

def train_model(data_path):
    # Load data
    df = pd.read_csv(data_path)

    # Feature extraction
    tfidf = TfidfVectorizer(max_features=5000)
    X = tfidf.fit_transform(df["text"])
    y = (df["label"] == "positive").astype(int)  # Binary classification (positive = 1, otherwise 0)

    # Train/test split
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Train model
    model = LogisticRegression()
    model.fit(X_train, y_train)

    # Evaluate
    y_pred = model.predict(X_test)
    print("Accuracy:", accuracy_score(y_test, y_pred))
    print(classification_report(y_test, y_pred))

    return model, tfidf

if __name__ == "__main__":
    model, tfidf = train_model("../data/processed_stock_data.csv")
